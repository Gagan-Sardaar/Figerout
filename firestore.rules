rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the user is an Admin
    function isAdmin() {
      // Check if the user document exists and the role is 'Admin'
      return exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read any user profile. Authenticated users can read their own.
      allow get: if request.auth != null && (request.auth.uid == userId || isAdmin());
      // Only Admins can list all users.
      allow list: if request.auth != null && isAdmin();
      // Admins can update any user profile. Users can update their own.
      allow update: if request.auth != null && (request.auth.uid == userId || isAdmin());
      
      // User creation is tied to Firebase Auth sign-up. 
      // This rule allows the associated user document to be created.
      // The app flow (disabled public signup) controls who can create accounts.
      allow create: if request.auth != null;
      
      // Disallow client-side deletion of user accounts for safety.
      allow delete: if false;

      // Rules for the 'colors' subcollection
      match /colors/{colorId} {
        // A user can create or update their own saved colors.
        allow create, update: if request.auth.uid == userId;
        // A user can read their own colors. An Admin can read any user's colors.
        allow get, list: if request.auth.uid == userId || isAdmin();
        // A user can delete their own colors. An Admin can also delete any color.
        allow delete: if request.auth.uid == userId || isAdmin();
      }
    }

    // Rules for the 'pages' collection (static content)
    match /pages/{pageSlug} {
      // Anyone can read static pages like 'About Us', 'Privacy Policy', etc.
      allow get, list: if true;
      // Only Admins can create, update, or delete static pages.
      allow write: if request.auth != null && isAdmin();
    }
  }
}
