
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requester is an Admin
    function isAdmin() {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Admin';
    }

    // Rules for the 'pages' collection
    match /pages/{pageSlug} {
      // Anyone can read static page content (About, Privacy, etc.)
      allow read: if true;
      
      // Only Admins can create, update, or delete pages
      allow write: if isAdmin();
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // A user can read their own profile. An Admin can read any profile.
      allow get: if request.auth != null && (request.auth.uid == userId || isAdmin());
      
      // Admins can list all users for the admin dashboard.
      allow list: if isAdmin();
      
      // Only Admins can update user profiles.
      allow update: if isAdmin();

      // Disallow creating or deleting users from the client-side for security.
      // This should be handled by a secure backend function in a real-world scenario.
      allow create, delete: if false;

      // Rules for the 'colors' subcollection within each user document
      match /colors/{colorId} {
        // A user can fully manage their own saved colors.
        allow read, write, delete: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}
